<?php
# This file was automatically generated by the MediaWiki 1.39.4
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See docs/Configuration.md for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}


## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "BU";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "/w";

## The protocol and server name to use in fully-qualified URLs
$wgServer = "http://localhost:9000";

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL paths to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogos = [
	'1x' => "$wgResourceBasePath/resources/assets/change-your-logo.svg",
	'icon' => "$wgResourceBasePath/resources/assets/change-your-logo.svg",
];

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = "jaideraf@gmail.com";
$wgPasswordSender = "jaideraf@gmail.com";

$wgEnotifUserTalk = true; # UPO
$wgEnotifWatchlist = true; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = "192.168.0.22";
$wgDBname = "my_wiki";
$wgDBuser = "root";
$wgDBpassword = "root";

# MySQL specific settings
$wgDBprefix = "";

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Shared database table
# This has no effect unless $wgSharedDB is also set.
$wgSharedTables[] = "actor";

## Shared memory settings
$wgMainCacheType = CACHE_ACCEL;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgUseImageMagick = true;
#$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = true;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = false;

# Site language code, should be one of the list in ./includes/languages/data/Names.php
$wgLanguageCode = "pt-br";

# Time zone
$wgLocaltimezone = "UTC";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publicly accessible from the web.
#$wgCacheDirectory = "$IP/cache";

$wgSecretKey = "2cc08b99152b71a89bca49d11480f6d5e0675bc3eec399cdb2d94db0d3d3c712";

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "c82d476bd8675a1b";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

# The following permissions were set based on your choice in the installer
$wgGroupPermissions['*']['edit'] = false;

## Default skin: you can change the default skin. Use the internal symbolic
## names, e.g. 'vector' or 'monobook':
$wgDefaultSkin = "vector";

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin( 'MinervaNeue' );
#wfLoadSkin( 'MonoBook' );
wfLoadSkin( 'Timeless' );
wfLoadSkin( 'Vector' );


# End of automatically generated settings.
# Add more configuration options below.

$wgNamespacesWithSubpages[NS_MAIN] = true;
$wgRawHtml = true;
$wgAllowExternalImages = true;
$wgAllowDisplayTitle = true;
$wgRestrictDisplayTitle = false;
$wgFileExtensions = array_merge(
    $wgFileExtensions, array(
        'pdf', 'svg', 'webp', 'doc','docx', 'ppt', 'xls', 'xlsx'
        )
);
define("NS_AUTHORITY", 3000);
define("NS_AUTHORITY_TALK", 3001);
$wgExtraNamespaces[NS_AUTHORITY] = "Autoridade";
$wgExtraNamespaces[NS_AUTHORITY_TALK] = "Autoridade_Discussão";
$wgNamespaceAliases['Authority'] = NS_AUTHORITY;
$wgNamespaceAliases['Authority_Talk'] = NS_AUTHORITY_TALK;


# Básicas:
wfLoadExtension( 'VisualEditor' );
wfLoadExtension( 'WikiEditor' );
$wgHiddenPrefs[] = 'usebetatoolbar';


wfLoadExtension( 'CategoryTree' );
wfLoadExtension( 'Cite' );
wfLoadExtension( 'CiteThisPage' );
wfLoadExtension( 'CodeEditor' );
wfLoadExtension( 'InputBox' );
wfLoadExtension( 'Interwiki' );
# To grant sysops permissions to edit interwiki data
$wgGroupPermissions['sysop']['interwiki'] = true;
wfLoadExtension( 'MultimediaViewer' );
wfLoadExtension( 'Nuke' );
wfLoadExtension( 'PageImages' );
wfLoadExtension( 'ParserFunctions' );
$wgPFEnableStringFunctions = true;
$wgPFStringLengthLimit = 10000;
wfLoadExtension( 'PdfHandler' );
wfLoadExtension( 'ReplaceText' );
wfLoadExtension( 'Poem' );
wfLoadExtension( 'Scribunto' );
$wgScribuntoDefaultEngine = 'luasandbox';
wfLoadExtension( 'SecureLinkFixer' );
wfLoadExtension( 'SpamBlacklist' );
wfLoadExtension( 'SyntaxHighlight_GeSHi' );
wfLoadExtension( 'TemplateData' );


wfLoadExtension( 'AdminLinks' );
wfLoadExtension( 'cldr' );
wfLoadExtension( 'CodeMirror' );
$wgDefaultUserOptions['usecodemirror'] = 1;
wfLoadExtension( 'DataTransfer' );
wfLoadExtension( 'DeleteBatch' );
wfLoadExtension( 'Description2' );
$wgEnableMetaDescriptionFunctions = true;
wfLoadExtension( 'DisplayTitle' );
$wgDisplayTitleHideSubtitle = true;
wfLoadExtension( 'DynamicSidebar' );
$wgDynamicSidebarUseGroups = true;
wfLoadExtension( 'ExternalData' );
wfLoadExtension( 'MobileFrontend' );
$wgDefaultMobileSkin = 'minerva';
wfLoadExtension( 'MyVariables' );
wfLoadExtension( 'PageForms' );
$wgPageFormsAutoCreateUser = "Automatic";
$wgPageFormsMaxLocalAutocompleteValues = 1;
$wgPageFormsAutocompleteOnAllChars = true;
wfLoadExtension( 'RegexFunctions' );
wfLoadExtension( 'TemplateSandbox' );
$wgTemplateSandboxEditNamespaces[] = 'NS_MODULE';
wfLoadExtension( 'TemplateStyles' );
wfLoadExtension( 'UrlGetParameters' );
wfLoadExtension( 'UserFunctions' );
$wgUFAllowedNamespaces = array(
    NS_MAIN => true,
    NS_USER => true,
    NS_TEMPLATE => true,
    NS_PROJECT => true
);

wfLoadExtension( 'IdGenerator' );
wfLoadExtension( 'SemanticMediaWiki' );
enableSemantics( 'bu.wiki.ufsc.br' );
$wgDefaultUserOptions['smw-prefs-general-options-show-entity-issue-panel'] = false;
$smwgNamespacesWithSemanticLinks[NS_AUTHORITY] = true;
$smwgNamespacesWithSemanticLinks[NS_AUTHORITY_TALK] = false;
$smwgPDefaultType = '_txt';
$smwgPageSpecialProperties = [];
$smwgPageSpecialProperties[] = '_MDAT';
$smwgPageSpecialProperties[] = '_CDAT';
$smwgPageSpecialProperties[] = '_DTITLE';
$smwgFieldTypeFeatures = SMW_FIELDT_CHAR_LONG;
$smwgExperimentalFeatures = $smwgExperimentalFeatures & ~SMW_QUERYRESULT_PREFETCH;
$smwgEntityCollation = 'uppercase';
$smwgEnabledQueryDependencyLinksStore = true;
$smwgEnabledFulltextSearch = true;
$smwgFulltextSearchIndexableDataTypes = SMW_FT_BLOB | SMW_FT_URI | SMW_FT_WIKIPAGE;
$smwgQMaxSize = 55;
$smwgEnabledEditPageHelp = false;
$smwgEnabledSpecialPage['RunQuery'] = true;
$wgSearchType = 'SMWSearch';
$GLOBALS['smwgJobQueueWatchlist'] = [
	'smw.update',
	'smw.parserCachePurge',
    'smw.fulltextSearchTableUpdate',
    'smw.changePropagationUpdate',
    'smw.changePropagationClassUpdate',
    'smw.changePropagationDispatch'
];
wfLoadExtension( 'SemanticResultFormats' );
wfLoadExtension( 'SemanticExtraSpecialProperties' );
$sespgEnabledPropertyList = array(
	'_CUSER',
	'_SUBP'
);
wfLoadExtension( 'SemanticScribunto' );

# HeaderTabs precisa ficar em baixo por causa do registro de namespaces de outras extensões
wfLoadExtension( 'HeaderTabs' );
$wgHeaderTabsEditTabLink = false;
$wgHeaderTabsRenderSingleTab = true;
$wgHeaderTabsAutomaticNamespaces[] = NS_MAIN;
$wgHeaderTabsAutomaticNamespaces[] = NS_USER;
$wgHeaderTabsAutomaticNamespaces[] = NS_AUTHORITY;

# SemanticDependencyUpdater precisa ficar em baixo por causa do registro do SMW
wfLoadExtension( 'SemanticDependencyUpdater' );
$wgSDUUseJobQueue = false;